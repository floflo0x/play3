<%- include('./includes/head.ejs') %>

<link rel="stylesheet" href="/style1.css">
<link rel="stylesheet" href="/calc.css">

<body class="bg-black">
    <style>
        .nav-link {
            text-decoration: none;
            color: white;
            text-align: center;
            cursor: pointer;
        }

        .nav-link:hover {
            text-decoration: none;
            color: #7CFC00;
        }

        .nav-link:hover i {
            color: #7CFC00;
        }

        .nav-link:hover span {
            color: #7CFC00 !important;
        }

        .nav-link .activeNav {
            color: #7CFC00 !important;
        }

        .form-range {
            border: none;
        }

        @media (max-width: 500px) {
            .tbDiv {
                margin-left: 0;
            }
        }
    </style>

    <header class="header">
		<div class="header-inner">
			<div class="container-fluid">
				<nav class="navbar bg-black fixed-top">
    				<div class="container-fluid mb-1 justify-content-center display-6">
    					<b style="background: linear-gradient(to right, #2C69D1, #0ABCF9);
                            -webkit-background-clip: text;
                            -webkit-text-fill-color: transparent;
                            font-family: 'Ubuntu';"
                        >Financial</b>
    				</div>
    			</nav>
			</div>
		</div>
	</header>

    <div class="loading-spinner" id="loadingSpinner">
        <img src="https://i.ibb.co/PTLFqC0/cube.png" alt="Your Logo" class="logoSp">
        <div class="spinner"></div>
    </div>

    <section>
		<div class="container" style="font-family: 'Poppins'">
			<div class="row justify-content-center pt-2 ps-2 pe-2 pb-1" 
			style="margin-top: 70px; border-radius: 10px; background-image: linear-gradient(to right, #a17ce1, #2196f3);">
			<div class="row" style="margin-bottom: 10px; color: white; font-weight: bold;">
				<div class="col-xxl d-flex justify-content-center align-items-center">
                    <%= x.title.toUpperCase() %>
                </div>
                <!-- <div class="col-6 text-center">
                    <%= f %>%
                </div>
                <div class="col-6 text-center">
                    <%= x.daily_rate %>%
                </div> -->
			</div>
		</div>
	</section>

    <section>
        <div class="container" id="products">
            <div class="row justify-content-center" style="margin-top: -2px; padding-top: 20px;">
                <div class="col-xxl text-white" style="font-family: 'Poppins';">
                    <h3>Product Term</h3>
                </div>

                <div class="col-xxl" style="font-family: 'Poppins';">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td style="color: white;">Buy</td>
                                <td class="text-end text-white">Expired time</td>
                            </tr>
                            <tr>
                                <td class="text-white" id="d1"><%= newDate3 %></td>
                                <td class="text-end text-white" id="d2"><%= newDate2 %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="col-xxl text-white mt-2" style="font-family: 'Poppins';">
                    <h3>Product rules</h3>
                    <h4>Buy</h4>
                    <p style="font-family: 'Poppins';">
                        <span style="color: grey;">Min invest:</span> $<%= x.min_invest %>
                    </p>
                    <p style="font-family: 'Poppins';">
                        <span style="color: grey;">Rate of Interest:</span> <%= x.daily_rate %>%
                    </p>
                    <p style="font-family: 'Poppins';">
                        <span style="color: grey;">Duration:</span> <%= x.duration %> Days
                    </p> 
                </div>

                <div class="col-xxl text-white mb-4">
                    <main class="container top-container">
                        <h1 class="page-title">Interest Calculator</h1>
                        <p class="hero-paragraph" style="font-family: 'Poppins'">
                            Find out how much you can grow your money through compound interest
                        </p>
                        <div class="calculator">
                            <form class="compound-form">
                                <div class="compound-form-field">
                                    <label for="principal" style="color: grey;">Initial investment</label>
                                    <input
                                        type="text"
                                        name="principal"
                                        id="principal"
                                        placeholder="0000"
                                        required
                                    />
                                </div>
                                <div style="width: 300px; !important">
                                    <input type="range" class="form-range" min="0" max="1000" step="10" value="0" id="customRange3">
                                </div>

                                <div class="compound-form-field">
                                    <label for="rate" style="color: grey;">Interest rate</label>
                                    <input
                                        type="text"
                                        name="rate"
                                        id="rate"
                                        value="3"
                                        placeholder="0000"
                                        readonly
                                    />
                                </div>

                                <div class="compound-form-field">
                                    <label for="period" style="color: grey;">Duration</label>
                                    <input
                                        type="text"
                                        name="period"
                                        id="period"
                                        value="5"
                                        placeholder="0000"
                                        required
                                    />
                                </div>
                                <div style="width: 300px; !important">
                                    <input type="range" class="form-range" min="0" max="1000" step="1" value="0" id="customRange5">
                                </div>
                                <div class="compound-form-field">
                                    <input class="button" type="submit" value="Calculate" style="font-weight: bold;" />
                                </div>
                            </form>
                        </div>
                    </main>
                </div>

                <div class="col-xxl" style="font-family: 'Poppins'">
                    <div class="row border-0 tbDiv">
                        <div class="col-12 col-sm-3 mb-5 d-flex align-items-center justify-content-center text-center">
                            <img src=<%= x.image_url %> class="img-fluid" width="100px">
                        </div>
                        <div class="col-12 col-sm-4 mb-5 text-center d-flex align-items-center justify-content-center">
                            <input 
                                type="number" 
                                class="border-0 p-2 w-100 text-center" 
                                id="miDiv" 
                                style="border-radius: 10px; background-color: #C4B454; color: black; font-weight: bold;" 
                                placeholder="$<%= x.min_invest %>" 
                            />
                        </div>
                        <div class="col-12 col-sm-5 mb-5 d-flex align-items-center justify-content-center text-center">
                            <a href="<%= set == true ? 'javascript:void(0)' : '#'%>" class="btn border-0 w-100 bbb" style="text-decoration: none; color: black; background-color: #7CFC00; font-weight: bold;">BUY</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section>
        <div class="alertShow p-3">
            <h3>Insufficient Balance</h3>
            <p>Please deposit some amount to continue...</p>
            <div class="border-0" style="display: flex; justify-content: space-between; align-items: center">
                <button type="button" class="btn close border-0" style="color: #40E0D0; text-transform: uppercase; font-weight: bold; font-size: 14px;">Close</button>
                <a href="#" style="cursor: pointer; text-decoration: none; color: #7CFC00; text-transform: uppercase; font-size: 14px;"><b>DEPOSIT</b></a>
            </div>
        </div>
    </section>

    <section>
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-xxl">
                    <h4>Locking period</h4>
                    <p style="font-family: 'Poppins';">Can't withdrawal during the product cycle, the income are automatically returned to the wallet.</p>
                    <h4>Information</h4>
                    <p style="font-family: 'Poppins';">Active products: <%= active %></p>
                </div>
            </div>
        </div>
    </section>

    <section>
        <div class="container" style="height: 100px;"></div>
    </section>

	<footer>
        <%- include('./includes/footer.ejs', { name: 'finance1' }) %>
    </footer>

    <script type="text/javascript">
        let set = "<%= set%>";
        let l = "<%= l.main_balance %>";
        let y = "<%= x.min_invest %>";
        const fin1 = "<%= JSON.stringify(x) %>";
        const d1 = "<%= newDate2 %>";
        const d2 = "<%= newDate3 %>";

        window.addEventListener('load', function () {
          // console.log("hii...");
          // Get the loading spinner element
          const loadingSpinner = document.getElementById('loadingSpinner');
            
          // Hide the loading spinner
          loadingSpinner.style.display = 'none';
        });
    </script>

    <script>
        globalThis.document.addEventListener('DOMContentLoaded', () => {
            const btn = globalThis.document.querySelector('.bbb');
            const close = globalThis.document.querySelector('.close');
            const alertShow = globalThis.document.querySelector('.alertShow');

            const fin2 = JSON.parse(fin1.replace(/&#34;/g, '"'));
            // console.log(fin2);

            // console.log(d1, d2);

            let bal = parseInt(l);
            let minInvest = parseInt(y);

            // console.log(set, btn, bal, minInvest);
        
            btn.addEventListener('click', () => {
                const p = document.getElementById("miDiv").value !== '' ? document.getElementById("miDiv").value : minInvest;
                console.log(p, bal);
                // console.log(btn.getAttribute('href'), bal, minInvest, set);

                if(btn.getAttribute('href') == '#') {
                    if((bal >= p)) {
                        alertShow.innerHTML = `
                            <h3>Buy Product</h3>
                            <p>Are you confirm to buy this product?</p>
                            
                            Product Name: <%= x.title.toUpperCase() %><br>
                            Daily rate: <%= x.daily_rate %>%<br>
                            Duration: <%= x.duration %> Days

                            <form action="/user/confirm/<%= x.p_id %>" method="POST">
                                <div class="border-0 mt-2" style="display: flex; justify-content: space-between; align-items: center">
                                    <button type="button" class="btn close1 border-0" style="color: #40E0D0; text-transform: uppercase; font-weight: bold; font-size: 14px;">Close</button>

                                    <input type="hidden" name="amount" value="${p}">

                                    <button type="btn" class="border-0 bg-transparent" style="cursor: pointer; text-decoration: none; color: #7CFC00; text-transform: uppercase; font-size: 14px;"><b>Yes confirm</b></button>
                                </div>
                            </form>
                        `;
                        alertShow.style.display = 'block';
                    }
                    else {
                        alertShow.style.display = 'block';
                    }
                }
                else {
                    btn.style.backgroundColor = 'dimgray';
                }

                const close1 = globalThis.document.querySelector('.close1');

                if (close1 !== null) {
                    close1.addEventListener('click', () => {
                        alertShow.style.display = "none";
                    })
                }
            })

            close.addEventListener('click', () => {
                alertShow.style.display = "none";
            })

            function myFunction() {
                alertShow.style.display = "none";
            }

            function changeIconColor(element) {
                // Remove 'activeNav' class from all links
                sdocument.querySelectorAll('.nav-link i').forEach(icon => {
                    icon.style.color = '#ffffff';
                });
                document.querySelectorAll('.nav-link span').forEach(text => {
                    text.style.color = 'white';
                });

                // Set the clicked icon and text to green
                let icon = link.querySelector('i');
                icon.style.color = '#7CFC00';

                let text = link.querySelector('span');
                text.style.color = '#7CFC00';
            }

            function getMonthName(month) {
              const months = [
                "January", "February", "March", "April",
                "May", "June", "July", "August",
                "September", "October", "November", "December"
              ];

              return months[month];
            }

            function addOrdinalIndicator(day) {
              const suffixes = ["th", "st", "nd", "rd"];
              const relevantDigits = (day < 30) ? day % 20 : day % 30;
              const suffix = (relevantDigits <= 3 && relevantDigits > 0) ? suffixes[relevantDigits] : suffixes[0];

              return `${day}${suffix}`;
            }

            function formatDate(dateString) {
              const date = new Date(dateString);
              const day = date.getDate();
              const month = getMonthName(date.getMonth());
              const year = date.getFullYear();

              const formattedDay = addOrdinalIndicator(day);

              return `${formattedDay} ${month} ${year}`;
            }

            globalThis.document.getElementById("d2").textContent = formatDate(d1);
            globalThis.document.getElementById("d1").textContent = formatDate(d2);

            // console.log(formatDate(d1));
            // console.log(formatDate(d2));
        })
    </script>

    <script>
        globalThis.document.addEventListener('DOMContentLoaded', () => {
            const form = document.querySelector(".compound-form");
            const calculator = document.querySelector(".calculator");
            let results = document.querySelector(".results");

            const customRange3 = globalThis.document.getElementById("customRange3");
            const customRange5 = globalThis.document.getElementById("customRange5");

            // const showData1 = globalThis.document.getElementById("showData1");
            // const showData2 = globalThis.document.getElementById("showData2");
            // const showData3 = globalThis.document.getElementById("showData3");

            customRange3.addEventListener('input', (e) => {
                // console.log(e.target.value);
                globalThis.document.getElementById("principal").value = e.target.value;
            })

            customRange5.addEventListener('input', (e) => {
                // console.log(e.target.value);
                globalThis.document.getElementById("period").value = e.target.value;
            })

            let compoundData = [];
            let d = new Date();
            // let year = d.getFullYear();
            let year = d.getDate();
            let xLabels = [year];

            form.addEventListener("submit", (e) => {
                e.preventDefault();

                compoundData = [];
                xLabels = [year];

                let P = parseFloat(e.target.principal.value); // principal
                let i = parseFloat(e.target.rate.value); // nominal annual interest rate in percentage terms
                let n = parseFloat(e.target.period.value); // number of compounding periods

                let ci;
                compoundData.push(P);
                for (let x = 1; x < n + 1; x++) {
                    xLabels.push(year + x);
                    ci = P * (1 + i / 100) ** x;
                    compoundData.push(ci.toString().match(/^-?\d+(?:\.\d{0,2})?/)[0]);
                }

                // console.log(xLabels);

                const html = `
                    <p class="results-text">
                        <table class="table table-borderless">
                            <thead>
                                <tr>
                                  <th scope="col" style="color: grey;">Invested amount</th>
                                  <th scope="col" style="color: grey;">Est. Returns</th>
                                  <th scope="col" style="color: grey;">Total Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                  <td class="text-start text-white" id="showData1" style=" font-weight: bold;">$0</td>
                                  <td class="text-start text-white" id="showData2" style=" font-weight: bold;">$0</td>
                                  <td class="text-start text-white" id="showData3" style=" font-weight: bold;">$0</td>
                                </tr>
                            </tbody>
                        </table> 
                        <span class="ci-result-total">$${compoundData[compoundData.length - 1]}</span>
                    </p>
                    <div class="chart-wrapper">
                        <canvas id="chart"></canvas>
                    </div>
                `;

                const si = parseFloat(compoundData[compoundData.length - 1]) - parseFloat(P);

                // console.log(compoundData[compoundData.length - 1], P, si);

                if (!results) {
                    const resDiv = document.createElement("div");
                    resDiv.className = "results";
                    resDiv.innerHTML = html;

                    calculator.appendChild(resDiv);
                    results = document.querySelector(".results");
                } else {
                    results.innerHTML = html;
                }

                const ctx = document.getElementById("chart").getContext("2d");
                const myChart = new Chart(ctx, {
                    type: "line",
                    data: {
                        labels: xLabels,
                        datasets: [
                            {
                                // fill: { target: "origin", above: "rgba(255, 255, 255, 0.38)" },
                                label: "Future Value",
                                data: compoundData,
                                backgroundColor: "#7CFC00",
                                borderColor: "#7CFC00",
                                borderWidth: 1,
                            },
                        ],
                    },
                    options: {
                        scales: {
                            x: {
                                ticks: {
                                    color: "rgba(255, 255, 255, 0.74)",
                                },
                                grid: {
                                    display: false,
                                    borderColor: "rgba(255, 255, 255, 0.12)",
                                },
                            },
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    // Include a euro sign in the ticks
                                    callback: function (value, index, values) {
                                        return "$ " + value;
                                    },
                                    color: "rgba(255, 255, 255, 0.74)",
                                },
                                grid: {
                                    borderColor: "rgba(255, 255, 255, 0.12)",
                                    color: "rgba(255, 255, 255, 0.12)",
                                },
                            },
                        },
                    },
                });

                globalThis.document.getElementById("showData1").textContent = '$' + P.toFixed(2);
                globalThis.document.getElementById("showData2").textContent = '$' + si.toFixed(2);
                globalThis.document.getElementById("showData3").textContent = '$' + compoundData[compoundData.length - 1];
                globalThis.document.getElementById("miDiv").textContent = '$' + P.toFixed(2);
            });
        })
    </script>
    
<%- include('./includes/end.ejs') %>